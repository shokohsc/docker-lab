version: '2'

networks:

    exposed:
        driver: bridge
        ipam:
            driver: default
            config: # http://www.subnet-calculator.com/subnet.php?net_class=B
            - subnet: 172.16.0.0/25 # 172.16.0.1 - 172.16.0.126
              gateway: 172.16.0.126
              ip_range: 172.16.0.0/26 # 172.16.0.1 - 172.16.0.62

    hidden:
        internal: true

volumes:
    prometheus_data: {}
    grafana_data: {}

services:

    traefik:
        container_name: traefik
        image: traefik
        restart: ${RESTART_MODE}
        command: --api --docker
        ports:
            - 80:80
            - 443:443
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./config/traefik/traefik.toml:/etc/traefik/traefik.toml
            - ./config/traefik/acme.json:/etc/traefik/acme/acme.json
        networks:
            - exposed
        labels:
            - "traefik.enable=true"
            - "traefik.port=8080"
            - "traefik.frontend.rule=Host:traefik.gamestream.biz"

    gitlab:
        container_name: gitlab
        image: gitlab/gitlab-ce
        restart: ${RESTART_MODE}
        ports:
            - "9022:22"
        volumes:
            - ./config/gitlab:/etc/gitlab
            - ./logs/gitlab:/var/log/gitlab
            - ./data/gitlab:/var/opt/gitlab
        environment:
            GITLAB_OMNIBUS_CONFIG: ${GITLAB_OMNIBUS_CONFIG}
        networks:
            exposed:
                ipv4_address: 172.16.0.63
        depends_on:
            - traefik
        labels:
            - "traefik.enable=true"
            - "traefik.port=80"
            - "traefik.docker.network=dockerlab_exposed"
            - "traefik.frontend.rule=Host:gitlab.gamestream.biz"

    gitlab-runner:
        container_name: gitlab-runner
        image: gitlab/gitlab-runner:alpine
        restart: ${RESTART_MODE}
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./config/gitlab-runner/config.toml:/etc/gitlab-runner/config.toml
        networks:
            - exposed
        depends_on:
            - gitlab
            - rancher
            - registry
        labels:
            - "traefik.enable=false"

    portainer:
        container_name: portainer
        image: portainer/portainer
        restart: ${RESTART_MODE}
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./data/portainer:/data
        networks:
            - exposed
        depends_on:
            - traefik
        labels:
            - "traefik.enable=true"
            - "traefik.port=9000"
            - "traefik.frontend.rule=Host:portainer.gamestream.biz"

    rancher:
        container_name: rancher
        image: rancher/server:stable
        restart: ${RESTART_MODE}
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./data/rancher:/var/lib/mysql
        networks:
            exposed:
                ipv4_address: 172.16.0.64
        depends_on:
            - traefik
        labels:
            - "traefik.enable=true"
            - "traefik.port=8080"
            - "traefik.docker.network=dockerlab_exposed"
            - "traefik.frontend.rule=Host:rancher.gamestream.biz"

    registry:
        container_name: registry
        image: registry:2
        restart: ${RESTART_MODE}
        environment:
            REGISTRY_STORAGE_DELETE_ENABLED: ${REGISTRY_STORAGE_DELETE_ENABLED}
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./data/registry:/var/lib/registry
        networks:
            - exposed
        depends_on:
            - traefik
        labels:
            - "traefik.enable=true"
            - "traefik.port=5000"
            - "traefik.docker.network=dockerlab_exposed"
            - "traefik.frontend.rule=Host:registry.gamestream.biz"

    registry-ui:
        container_name: registry-ui
        image: klausmeyer/docker-registry-browser
        restart: ${RESTART_MODE}
        environment:
            DOCKER_REGISTRY_URL: ${DOCKER_REGISTRY_URL}
            NO_SSL_VERIFICATION: ${NO_SSL_VERIFICATION}
            BASIC_AUTH_USER: ${BASIC_AUTH_USER}
            BASIC_AUTH_PASSWORD: ${BASIC_AUTH_PASSWORD}
            ENABLE_DELETE_IMAGES: ${ENABLE_DELETE_IMAGES}
            PUBLIC_REGISTRY_URL: ${PUBLIC_REGISTRY_URL}
        networks:
            - exposed
        depends_on:
            - registry
        labels:
            - "traefik.enable=true"
            - "traefik.port=8080"
            - "traefik.frontend.rule=Host:registry-ui.gamestream.biz"

    grafana: # Monitoring tool exposed server
        container_name: grafana
        image: grafana/grafana:5.2.4
        restart: ${RESTART_MODE}
        environment:
            GF_SECURITY_ADMIN_PASSWORD: ${GLOBAL_PASSWORD}
            GF_SERVER_ROOT_URL: ${GRAFANA_ROOT_URL}
        volumes:
            - grafana_data:/var/lib/grafana
            - ./config/grafana/datasources:/etc/grafana/datasources
            - ./config/grafana/dashboards:/etc/grafana/dashboards
            - ./config/grafana/setup.sh:/setup.sh
        entrypoint: /setup.sh
        networks:
            - exposed
            - hidden
        depends_on:
            - traefik
            - prometheus
            - pushgateway
            - nodeexporter
            - cadvisor
        labels:
            - "traefik.enable=true"
            - "traefik.frontend.rule=Host:grafana.gamestream.biz"
            - "traefik.docker.network=dockerlab_exposed"
            - "traefik.port=3000"

    prometheus: # Database, grafana requirement
        image: prom/prometheus:v2.4.3
        container_name: prometheus
        restart: ${RESTART_MODE}
        volumes:
            - ./config/prometheus/:/etc/prometheus/
            - prometheus_data:/prometheus
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--web.console.libraries=/etc/prometheus/console_libraries'
            - '--web.console.templates=/etc/prometheus/consoles'
            - '--storage.tsdb.retention=200h'
            - '--web.enable-lifecycle'
        networks:
            - hidden

    alertmanager: # Grafana requirement
        image: prom/alertmanager:v0.15.2
        container_name: alertmanager
        volumes:
            - ./config/alertmanager/:/etc/alertmanager/
        command:
            - '--config.file=/etc/alertmanager/config.yml'
            - '--storage.path=/alertmanager'
        restart: ${RESTART_MODE}
        networks:
            - hidden

    nodeexporter: # Grafana requirement
        image: prom/node-exporter:v0.16.0
        container_name: nodeexporter
        restart: ${RESTART_MODE}
        user: root
        privileged: true
        volumes:
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
            - /:/rootfs:ro
        command:
            - '--path.procfs=/host/proc'
            - '--path.sysfs=/host/sys'
            - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
        networks:
            - hidden

    cadvisor: # Grafana requirement
        image: google/cadvisor:v0.31.0
        container_name: cadvisor
        restart: ${RESTART_MODE}
        volumes:
            - /:/rootfs:ro
            - /var/run:/var/run:rw
            - /sys:/sys:ro
            - /var/lib/docker/:/var/lib/docker:ro
            - /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
        networks:
            - hidden

    pushgateway: # Grafana requirement
        image: prom/pushgateway
        container_name: pushgateway
        restart: ${RESTART_MODE}
        networks:
            - hidden
